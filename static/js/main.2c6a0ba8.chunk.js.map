{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","console","log","_this$state","length","props","add","alert","maxDate","this","react_default","a","createElement","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","_props$task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","components_Task","key","doneTasks","Fragment","fontSize","App","counter","deleteTask","Object","toConsumableArray","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","concat","class","src_components_AddTask","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c6a0ba8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './AddTask.css'\r\nclass AddTask extends Component {\r\n    minDate = new Date().toISOString().slice(0, 10)\r\n    state = {\r\n        text: \"\",\r\n        checked: false,\r\n        date: this.minDate\r\n    }\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n    handleCheckbox = (e) => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        });\r\n    }\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            date: e.target.value\r\n        });\r\n    }\r\n    handleClick = () => {\r\n        console.log('dodja')\r\n        const { text, checked, date } = this.state\r\n        if (text.length > 2) {\r\n            const add = this.props.add(text, date, checked)\r\n            if (add) {\r\n                this.setState({\r\n                    text: \"\",\r\n                    checked: false,\r\n                    date: this.minDate\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"Za krótka nazwa\")\r\n        }\r\n    }\r\n    render() {\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate = maxDate + \"-12-31\"\r\n        return (\r\n            <div className=\"form\">\r\n                <input type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText} />\r\n                <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox} />\r\n                <label htmlFor=\"important\">Priorytet</label><br />\r\n                <label htmlFor=\"date\">Do kiedy zrobić</label>\r\n                <input type=\"date\" value={this.state.date} min={this.minDate} max={maxDate} onChange={this.handleDate} />\r\n                <button onClick={this.handleClick}>Dodaj</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddTask;","import React from 'react';\r\nconst Task = (props) => {\r\n    const style = {\r\n        color: 'red',\r\n    }\r\n    const { text, date, id, active, important, finishDate } = props.task\r\n    if (active) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <strong style={important ? style : null}>{text}</strong> - do <span>{date} </span>\r\n                    <button onClick={() => props.change(id)}>Zostało zrobione</button>\r\n                    <button onClick={() => props.delete(id)} >X</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    } else {\r\n        const finish = new Date(finishDate).toLocaleString()\r\n       return (\r\n            <div>\r\n                <p>\r\n                    <strong>{text}</strong><span><em> (zrobić do {date}) </em></span>\r\n                    <br />\r\n                    -potwierdzenie wykonania <span>{finish}</span>\r\n                    <button onClick={() => props.delete(id)} >X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task';\r\nconst TaskList = (props) => {\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n    if (done.length >= 2) {\r\n        done.sort((a, b) => b.finishDate - a.finishDate)\r\n    }\r\n    if (active.length >= 2) {\r\n        active.sort((a, b) => {\r\n            a = a.text.toLowerCase();\r\n            b = b.text.toLowerCase();\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0;\r\n        })\r\n    }\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n    return (\r\n        <>\r\n            <div className=\"active\">\r\n                <h1>Zadania do zrobienia</h1>\r\n                {activeTasks.length > 0 ? activeTasks : <p>brak zadań, ale jesteś szczęśliwym człowiekiem</p>}\r\n            </div>\r\n            <hr />\r\n            <div className=\"done\">\r\n                <h3>Zadania zrobione <em>({doneTasks.length})</em></h3>\r\n                {done.length > 5 && <span style={{ fontSize: \"15px\" }}> Wyświetlonych jest jedynie 5 ostatnihc elementów  </span>}\r\n                {doneTasks.slice(0, 5)}\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default TaskList;\r\n","import React, { Component } from 'react';\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList';\r\nimport './App.css';\r\nclass App extends Component {\r\n  counter = 9\r\n  state = {\r\n    tasks: [\r\n      { id: 1, text: \"zrobić dobry uczynek\", date: '2023-11-12', important: false, active: true, finishDate: null },\r\n      { id: 2, text: \"zrobić zakupy\", date: '2022-09-11', important: false, active: true, finishDate: null },\r\n      { id: 3, text: \"schudnąć 10 kilogramów\", date: '2022-05-20', important: true, active: true, finishDate: null },\r\n      { id: 4, text: \"iść na spacer z psem\", date: '2022-11-12', important: false, active: true, finishDate: null },\r\n      { id: 5, text: \"zrobić bude dla psa\", date: '2022-09-11', important: false, active: true, finishDate: null },\r\n      { id: 6, text: \"iść do fryzjera!\", date: '2022-05-20', important: true, active: true, finishDate: null },\r\n      { id: 7, text: \"iść na siłownie\", date: '2022-22-12', important: false, active: true, finishDate: null },\r\n      { id: 8, text: \"spotkać się z rodziną\", date: '2022-22-11', important: false, active: true, finishDate: null },\r\n    ]\r\n  }\r\n  deleteTask = (id) => {\r\n    let tasks = [...this.state.tasks]\r\n    tasks = tasks.filter(task => task.id !== id)\r\n    this.setState({\r\n      tasks\r\n    });\r\n  }\r\n  changeTaskStatus = (id) => {\r\n    const tasks = Array.from(this.state.tasks)\r\n    tasks.forEach(task => {\r\n      if (task.id === id) {\r\n        task.active = false;\r\n        task.finishDate = new Date().getTime()\r\n      }\r\n    });\r\n    this.setState({\r\n      tasks\r\n    })\r\n  }\r\n  addTask = (text, date, important) => {\r\n    const task = {\r\n      id: this.counter,\r\n      text: text,\r\n      date: date,\r\n      important: important,\r\n      active: true,\r\n      finishDate: null,\r\n    }\r\n    this.counter++\r\n    console.log(task)\r\n    this.setState(prevState => ({\r\n      tasks: [...prevState.tasks, task]\r\n    }))\r\n    return true\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\" >\r\n       <p class=\"name-app\">To-Do App</p> \r\n        <AddTask add={this.addTask} />\r\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}